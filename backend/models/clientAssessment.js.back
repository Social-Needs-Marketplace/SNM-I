const {createGraphDBModel, DeleteType, Types} = require("../utils/graphdb");
const {GDBNeedOccurrenceModel} = require("./need/needOccurrence");
const {GDBServiceOccurrenceModel} = require("./service/serviceOccurrence");
const {GDBNeedSatisfierOccurrenceModel} = require("./needSatisfierOccurrence");
const {GDBCOModel} = require("./ClientFunctionalities/characteristicOccurrence");
const {GDBClientModel} = require("./ClientFunctionalities/client");

const GDBClientAssessmentModel = createGraphDBModel({
  // needOccurrence: {type: GDBNeedOccurrenceModel, internalKey: ':forNeedOccurrence'},
  // serviceOccurrence: {type: GDBServiceOccurrenceModel, internalKey: ':hasServiceOccurrence'},
  // startDate: {type: Date, internalKey: ':hasStartDate'},
  // endDate: {type: Date, internalKey: ':hasEndDate'},
  // needSatisfierOccurrence: {type: GDBNeedSatisfierOccurrenceModel, internalKey: ':hasNeedSatisfierOccurrence'},
  // characteristicOccurrence : {type: [GDBCOModel], internalKey: ':hasCharacteristicOccurrence'},
  description: {type: String, internalKey: ':hasDescription'},
  note: {type: String, internalKey: ':hasNote'},
  // outcome: {type: String, internalKey: ':hasOutcome'},
  client: {type: GDBClientModel, internalKey: ':hasClient'},
  user: {type: GDBUserAccountModel, internalKey: ':hasUserAccount'},
  person: {type: GDBPersonModel, internalKey: ':hasPerson'},
  need: {type: GDBNeedModel, internalKey: ':hasNeed'},
}, {
  rdfTypes: [':ServiceProvision'], name: 'serviceProvision'
});

module.exports = {
  GDBClientAssessmentModel
}